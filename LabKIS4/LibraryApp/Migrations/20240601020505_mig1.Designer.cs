// <auto-generated />
using LibraryApp;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LibraryApp.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240601020505_mig1")]
    partial class mig1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("LibraryApp.Books", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Copies")
                        .HasColumnType("int");

                    b.Property<int>("Genres_Id")
                        .HasColumnType("int");

                    b.Property<int>("Publish_Year")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("Genres_Id");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("LibraryApp.Genres", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("LibraryApp.Members", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Join_Date")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("LibraryApp.Records", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Books_Id")
                        .HasColumnType("int");

                    b.Property<string>("Due_Date")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Members_Id")
                        .HasColumnType("int");

                    b.Property<string>("Record_Date")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Return_Date")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("Books_Id");

                    b.HasIndex("Members_Id");

                    b.ToTable("Records");
                });

            modelBuilder.Entity("LibraryApp.Books", b =>
                {
                    b.HasOne("LibraryApp.Genres", "Genres_")
                        .WithMany()
                        .HasForeignKey("Genres_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genres_");
                });

            modelBuilder.Entity("LibraryApp.Records", b =>
                {
                    b.HasOne("LibraryApp.Books", "Books_")
                        .WithMany()
                        .HasForeignKey("Books_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryApp.Members", "Members_")
                        .WithMany()
                        .HasForeignKey("Members_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Books_");

                    b.Navigation("Members_");
                });
#pragma warning restore 612, 618
        }
    }
}
